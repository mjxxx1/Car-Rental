// <auto-generated />
using System;
using CarRental;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRental.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRental.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarVersionID");

                    b.Property<string>("Color");

                    b.Property<DateTime?>("DateOfFirstRegistration");

                    b.Property<DateTime?>("DateOfPurchase");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("RegistrationNumber");

                    b.Property<string>("Status");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("char(17)");

                    b.HasKey("CarID");

                    b.HasIndex("CarVersionID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarRental.CarVersion", b =>
                {
                    b.Property<int>("CarVersionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirConditioningType");

                    b.Property<int?>("BootCapacity");

                    b.Property<string>("Brand");

                    b.Property<int>("Doors");

                    b.Property<int?>("EnginePower");

                    b.Property<int?>("EngineSize");

                    b.Property<float?>("FuelConsumptionPer100km");

                    b.Property<int>("FuelType");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Model");

                    b.Property<int>("OfferNameID");

                    b.Property<int>("Passengers");

                    b.Property<string>("Segment");

                    b.Property<int>("TransmissionType");

                    b.Property<string>("Type");

                    b.HasKey("CarVersionID");

                    b.HasIndex("OfferNameID");

                    b.ToTable("CarVersions");
                });

            modelBuilder.Entity("CarRental.OfferName", b =>
                {
                    b.Property<int>("OfferNameID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("OfferNameID");

                    b.ToTable("offerNames");
                });

            modelBuilder.Entity("CarRental.Pricelist", b =>
                {
                    b.Property<int>("PriceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BasePricePerDay")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<bool>("IsDeleted");

                    b.Property<short>("LoanTimeFrom");

                    b.Property<short>("LoanTimeTo");

                    b.Property<int>("OfferNameID");

                    b.HasKey("PriceID");

                    b.HasIndex("OfferNameID");

                    b.ToTable("Pricelists");
                });

            modelBuilder.Entity("CarRental.Car", b =>
                {
                    b.HasOne("CarRental.CarVersion", "Version")
                        .WithMany("Cars")
                        .HasForeignKey("CarVersionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CarRental.CarVersion", b =>
                {
                    b.HasOne("CarRental.OfferName", "OfferName")
                        .WithMany("CarVersions")
                        .HasForeignKey("OfferNameID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CarRental.Pricelist", b =>
                {
                    b.HasOne("CarRental.OfferName", "OfferName")
                        .WithMany("Pricelists")
                        .HasForeignKey("OfferNameID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
